## Gnotobiotic mouse 16S analysis and BiCOR
# Fig 2 and 3O

#install required packages
x<-c("ggplot2", "dada2", "vegan", "tidyr", "tidyverse","car","DESeq2", "phyloseq","FSA", "lme4", "phyloseq")
lapply(x, require, character.only = TRUE)

#load phyloseq object
load('phyloseq_16S')
physeq_16S

# Remove samples with less than 1000 reads 
ps2 <- prune_samples(sample_sums(physeq_16S) >= 1000, physeq_16S) 
ps2 #167

# Remove singletons
ps3 <- prune_taxa(taxa_sums(ps2) > 1, ps2)
ps3 #77

# Filter for ASVs that appear at least 3x in the dataset in at least 1% of samples (selected to included all Oligo-MM12 and the least amount of "Other" taxa)
# Can play with these values - subjective and need to have a reason for how many samples a sequence must be present in
ps_clean <- filter_taxa(ps3, function(x) sum(x > 3) > (0.01 * length(x)), TRUE) 
ps_clean #52

#export taxa table to rename non-OligoMM12 ASVs to "Other" otherwise they will not show up in relative abundance
ONLY DO THIS STEP IF YOU CHANGE THE FILTERING PARAMETERS, OTHERWISE YOU WILL HAVE TO OPEN THE CSV FILE AND RENAME UNASSIGNED ASVS AS OTHER
write.csv(ps_clean@tax_table, "taxa_table_filtered.csv")

#reload corrected taxa table (just replaced unassigned ASVs with "Other")
taxa_clean <- read.csv("taxa_table_filtered.csv", row.names = 1)
taxa_clean <- as.matrix(taxa_clean) #make sure taxa table is in matrix form to fit back into ps pbject

#add clean taxa table back to the ps object
TAX <- tax_table(taxa_clean)
tax_table(ps_clean) <- TAX
ps_clean

#save filtered phyloseq object
save(ps_clean, file = 'ps_clean')

#glom at Species level and relativize
ps_species <- ps_clean %>%
  tax_glom(taxrank = "Species") %>%
  subset_samples(SampleCode != "M3")  %>%
  transform_sample_counts(function(x) x*100 / sum(x)) %>%
  psmelt()

#prepare the melted ps object for plotting aesthetics
ps_species <- ps_species %>%
  mutate(Group = dplyr::recode(Group,
                                 "B_M" = "B+M")) %>%
  mutate(Species = dplyr::recode(Species,
                          "Acutalibacter_muris_KB18" = "A. muris KB18",
                          "Akkermansia_muciniphila_YL44" = "A. muciniphila YL44",
                          "Bacteroides_caecimuris_I48" = "B. caecimuris I48",
                          "Bifidobacterium_longum_animalis_YL2" = "B. longum YL2",
                          "Blauta_coccoides_YL58" = "B. coccoides YL58",
                          "Clostridium_clostridioforme_YL32" = "C. clostridioforme YL32",
                          "Clostridium_innocuum_I46" = "C. innocuum I46",
                          "Enterococcus_faecalis_KB1" = "E. faecalis KB1",
                          "Flavonifractor_plautii_YL31" = "F. plautii YL31",
                          "Lactobacillus_reuteri_I49" = "L. reuteri I49",
                          "Muribaculum_intestinale_YL27" = "M. intestinale YL27",
                          "Turicimonas_muris_YL45" = "T. muris YL45")) 

ps_species$Species <- factor(ps_species$Species,levels = c("A. muris KB18", "A. muciniphila YL44", "B. caecimuris I48", "B. longum YL2", "B. coccoides YL58", "C. clostridioforme YL32",  "C. innocuum I46", "E. faecalis KB1", "F. plautii YL31", "L. reuteri I49", "M. intestinale YL27", "T. muris YL45", "Other"))

## Alpha diversity 

#create alpha diversity variables and prepare data for plotting
richness <- estimate_richness(ps_clean, measures = c("Observed","Shannon","Chao1")) #Chao1 may not be the most relevant because this is a defined microbiota
colnames(richness)
str(richness)
richness2 <- cbind(richness, ps_clean@sam_data) 
richness2$evenness<-richness$Shannon/log(richness$Observed)

##Shannon
richness2_filt <- richness2 %>%
  filter(Group == "B" | Group == "B_M") %>%
  filter(Abx == "No") %>%
  mutate(Group = dplyr::recode(Group,
                                 "B_M" = "B+M"))

fig <- ggplot(richness2_filt, aes(x= Group, y = Shannon, color = Group, fill = Group)) + 
  theme_bw() +
  geom_boxplot(color = "black", alpha = 0.5) +
  geom_jitter(aes(color = Group), position = position_jitter(0.2),  size = 1.5) +
  labs(x = "Colonization", y = "Shannon Diversity Index")+
  theme(plot.title = element_text(face = "bold", hjust = 0.5))+
  scale_color_manual(name = "Colonization", values = c("black", "black"))+ #dot color
  scale_fill_manual(values = c("#33CCff","#0000ff")) #fill color
fig

#Shannon stats
library(rstatix)

#summary stats
richness2_filt %>%
  group_by(Group) %>%
  get_summary_stats(Shannon, type = "mean_sd")

#test for normality 
richness2_filt %>%
  group_by(Group) %>%
  shapiro_test(Shannon) #normal

#check homogeneity of variance
richness2_filt %>% levene_test(Shannon ~ Group) #variances are not unequal

#run t test
t.test(Shannon~Group, data=richness2_filt) #p=0.0939

##Chao1
fig <- ggplot(richness2_filt, aes(x= Group, y = Chao1, color = Group, fill = Group)) + 
  theme_bw() +
  geom_boxplot(color = "black", alpha = 0.5) +
  geom_jitter(aes(color = Group), position = position_jitter(0.2),  size = 1.5) +
  labs(x = "Colonization", y = "Chao1 Diversity Index")+
  theme(plot.title = element_text(face = "bold", hjust = 0.5))+
  scale_color_manual(name = "Colonization", values = c("black", "black"))+ #dot color
  scale_fill_manual(values = c("#33CCff","#0000ff")) #fill color
fig

#Chao1 stats
#summary stats
richness2_filt %>%
  group_by(Group) %>%
  get_summary_stats(Chao1, type = "mean_sd")

#test for normality
richness2_filt %>%
  group_by(Group) %>%
  shapiro_test(Chao1) #not normal

#check homogeneity of variance
richness2_filt %>% levene_test(Chao1 ~ Group) #variances are not unequal

#run wilcoxon test
wilcox_test(Chao1~Group, data=richness2_filt) #p=0.0709

##Evenness
fig <- ggplot(richness2_filt, aes(x= Group, y = evenness, color = Group, fill = Group)) + 
  theme_bw() +
  geom_boxplot(color = "black", alpha = 0.5) +
  geom_jitter(aes(color = Group), position = position_jitter(0.2),  size = 1.5) +
  labs(x = "Colonization", y = "Evenness Index")+
  theme(plot.title = element_text(face = "bold", hjust = 0.5))+
  scale_color_manual(name = "Colonization", values = c("black", "black"))+ #dot color
  scale_fill_manual(values = c("#33CCff","#0000ff")) #fill color
fig

#Chao1 stats
#summary stats
richness2_filt %>%
  group_by(Group) %>%
  get_summary_stats(evenness, type = "mean_sd")

#test for normality - normal
richness2_filt %>%
  group_by(Group) %>%
  shapiro_test(evenness) #normal

#check homogeneity of variance
richness2_filt %>% levene_test(evenness ~ Group) #variances are equal

#run t-test test
t.test(evenness~Group, data=richness2_filt) #p=0.606

##Beta diversity 
#Create function geo means for Variance Stabilizing Transformation. 
# Stabilize variants based on sample size
gm_mean = function(x, na.rm = TRUE){
  exp(sum(log(x[x > 0]), na.rm = na.rm) / length(x))
}

#Prepare data for downstream analysis
ps_clean_filt <- ps_clean %>%
  subset_samples(Group == "B" | Group == "B_M") %>% #selecting only for samples of interest
 subset_samples(Abx == "No") %>%
  subset_samples(SampleCode != "M3")

sdf <- as(sample_data(ps_clean_filt), "data.frame")

sdf <- sdf %>%
  mutate(Group = dplyr::recode(Group,
                                 "B_M" = "B+M"))

#Perform variance stabilization
library(BiocGenerics)
library(SummarizedExperiment)
library(DESeq2)

# Variance Stabilizing Transformation
ps_clean_deseq <- phyloseq_to_deseq2(ps_clean_filt, ~Group)

# Convert counts to integer
ps_clean_deseq = estimateSizeFactors(ps_clean_deseq, geoMeans = apply(counts(ps_clean_deseq), 1, gm_mean))
vst_blind <- DESeq2::varianceStabilizingTransformation(ps_clean_deseq, blind = TRUE)
vst_blind_mat <- SummarizedExperiment::assay(vst_blind)
vst_blind_mat <- t(vst_blind_mat) 
vst_blind_mat[which(vst_blind_mat < 0)] <- 0 
dists <- dist(t(assay(ps_clean_deseq)))

# Computing Bray-Curtis Dissimilarities and PCoA
comm_vst_blind_mat<- vegdist(vst_blind_mat, "bray")
PCoA_comm_vst_blind_mat<- capscale(comm_vst_blind_mat ~ 1, distance = "bray")
PCoA_comm_vst_blind_mat$CA$eig[1:3]/sum(PCoA_comm_vst_blind_mat$CA$eig)

PCoA_scores <- scores(PCoA_comm_vst_blind_mat)$sites

# Save scores into metadata tables
row.names(sdf) == row.names(scores(PCoA_comm_vst_blind_mat)$sites)
sdf$PCoA1 <- scores(PCoA_comm_vst_blind_mat)$sites[,1]
sdf$PCoA2 <- scores(PCoA_comm_vst_blind_mat)$sites[,2]

#Variance stabilized PCoA plot by colonization - check for sex effect
PCoA <- qplot(PCoA1, PCoA2,
              size = I(4), fill = Group, color = Group, data = (sdf))

#jpeg(file = "/Users/mwgutierrez/Desktop/16S seq/figures/Bray_3w_var_stab.jpeg", width = 1600, height = 1000, units = "px", res = 300) 
Fig <- qplot(sdf$PCoA1, sdf$PCoA2, xlab="PCoA1",ylab="PCoA2", #edit axes label here
              size=0.5, shape=Group, fill=Group, color=Group, data=(sdf))
Fig + 
  stat_ellipse(level=0.95, geom = "polygon", alpha = 1/6, linetype = 2, size=0.5, aes(fill = Group,color=Group))+
  scale_shape_manual(name="Group",values=c(21,22))+ #shape selection
  theme_bw() + theme(legend.title = element_text(colour="black", size=18, face="bold"),
                     legend.text = element_text(colour="black", size = 18),
                     axis.title=element_text(face="bold",size="18", color="black"),
                     legend.position="right",
                     plot.title=element_text(face="bold",size=18))+
  scale_color_manual(name="Group",values=c("black","black"))+ #outer shape color
  scale_fill_manual(name="Group",values=c("#33CCff","#0000ff"))+ #inside shape color
  guides(size=FALSE) 

# PERMANOVA for sample time
permanova <- adonis(comm_vst_blind_mat ~ Group * Cage, data = sdf, permutations = 999)
permanova$aov.tab # p=0.002

##Relative abundance
#Bar plots by group
library(RColorBrewer)

cutoff <- 0.05

ps_species_group <- ps_species %>% 
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No") %>% 
  filter(sum(Abundance) >cutoff)
#jpeg(file = "/Users/mackenziegutierrez/Desktop/16S seq/figures/relative_abundance_3w_group2.jpeg", width = 1500, height = 1200, units = "px", res = 300) 
fig <- ggplot(ps_species_group, aes (x = Group, y = Abundance, color = Species, fill = Species)) +
  geom_bar(stat = "identity", position = "fill") + 
  theme_bw() + 
  #coord_flip() +
  scale_y_continuous(labels = scales::percent)+
  labs(x = "Colonization", y = "Relative abundance") +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 12), 
        legend.text = element_text(face = "italic")) +
        scale_fill_manual(values=mycolors)+
  scale_color_manual(values=mycolors)
fig

#Bar plots by mouse sample
cutoff <- 0.05
ps_species_group <- ps_species %>% 
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No") %>% 
  filter(sum(Abundance) >cutoff)

fig <- ggplot(ps_species_group, aes (x = SampleCode, y = Abundance, color = Species, fill = Species)) +
  geom_bar(stat = "identity", position = "fill") +
  facet_wrap(~Group, scale="free_x") +
  theme_bw() + 
  scale_y_continuous(labels = scales::percent)+
  labs(x = "Mouse", y = "Relative abundance") +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 12), axis.text.x = element_text(angle = 90),
        legend.text = element_text(face = "italic")) +
        scale_fill_manual(values=mycolors)+
  scale_color_manual(values = mycolors)
fig

##Relative abundance boxplots per strain

#KB18
library(ggpubr)

ps_KB18 <- ps_species %>% 
  filter(Species == "A. muris KB18") %>%
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No")

ps_KB18 %>%
  group_by(Group) %>%
  shapiro_test(Abundance) #NA

wilcox.test(Abundance ~ Group, data = ps_KB18) #NA - Abundance is zero for all samples

#YL44
ps_YL44 <- ps_species %>% 
  filter(Species == "A. muciniphila YL44") %>%
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No")
  
ps_YL44 %>%
  group_by(Group) %>%
  shapiro_test(Abundance) #not normal

wilcox.test(Abundance ~ Group, data = ps_YL44) #p=0.535

figYL44 <- ggplot(ps_YL44, aes(x= Group, y = Abundance, color = Group, fill = Group)) + 
  theme_bw() +
  geom_boxplot(color = "black", alpha = 0.5, outlier.shape = NA) +
  geom_jitter(aes(color = Group), position = position_jitter(0.2),  size = 2) +
  labs(x = "Colonization", y = "Relative Abundance")+
  scale_color_manual(name = "Colonization", values = c("black","black"))+ #dot color
  scale_fill_manual(values = c("#33CCff","#0000ff")) +
  theme(legend.position = "none")
figYL44

#I48
ps_I48 <- ps_species %>% 
  filter(Species == "B. caecimuris I48") %>%
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No") 
  
ps_I48 %>%
  group_by(Group) %>%
  shapiro_test(Abundance) #normal

levene_test(Abundance ~ Group, data = ps_I48) #variances are not unequal

t.test(Abundance ~ Group, data = ps_I48, var.equal = TRUE) #p=0.6126

figI48 <- ggplot(ps_I48, aes(x= Group, y = Abundance, color = Group, fill = Group)) + 
  theme_bw() +
  geom_boxplot(color = "black", alpha = 0.5, outlier.shape = NA) +
  geom_jitter(aes(color = Group), position = position_jitter(0.2),  size = 1.3) +
  labs(x = "Colonization", y = "Relative Abundance")+
  scale_color_manual(name = "Colonization", values = c("black","black"))+ #dot color
  scale_fill_manual(values = c("#33CCff","#0000ff")) +
  theme(legend.position = "none")
figI48

#YL2
ps_YL2 <- ps_species %>% 
  filter(Species == "B. longum YL2") %>%
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No")
  
ps_YL2 %>%
  group_by(Group) %>%
  shapiro_test(Abundance) #NA

wilcox.test(Abundance ~ Group, data = ps_YL2) #NA - all values are zero

#YL58
ps_YL58 <- ps_species %>% 
  filter(Species == "B. coccoides YL58") %>%
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No")
  
ps_YL58 %>%
  group_by(Group) %>%
  shapiro_test(Abundance) #normal

levene_test(Abundance ~ Group, data = ps_YL58) #variances are not unequal

t.test(Abundance ~ Group, data = ps_YL58, var.equal = TRUE) #p=0.01042

figYL58 <- ggplot(ps_YL58, aes(x= Group, y = Abundance, color = Group, fill = Group)) + 
  theme_bw() +
  labs(title = "YL58")+
  #coord_flip() +
  geom_boxplot(color = "black", alpha = 0.5, outlier.shape = NA) +
  geom_jitter(aes(color = Group), position = position_jitter(0.2),  size = 2.5) +
  labs(x = "Colonization", y = "Relative Abundance")+
 scale_color_manual(name = "Colonization", values = c("black","black"))+ #dot color
  scale_fill_manual(values = c("#33CCff","#0000ff")) +
  theme(legend.position = "none")
figYL58

#YL32
ps_YL32 <- ps_species %>% 
  filter(Species == "C. clostridioforme YL32") %>%
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No")
  
ps_YL32 %>%
  group_by(Group) %>%
  shapiro_test(Abundance) #normal

levene_test(Abundance ~ Group, data = ps_YL32) #variances are not unequal

t.test(Abundance ~ Group, data = ps_YL32, var.equal = TRUE) #p=0.7927

figYL32 <- ggplot(ps_YL32, aes(x= Group, y = Abundance, color = Group, fill = Group)) + 
  theme_bw() +
  labs(title = "YL32")+
  geom_boxplot(color = "black", alpha = 0.5, outlier.shape = NA) +
  geom_jitter(aes(color = Group), position = position_jitter(0.2),  size = 1.3) +
  labs(x = "Colonization", y = "Relative Abundance")+
  scale_color_manual(name = "Colonization", values = c("black","black"))+ #dot color
  scale_fill_manual(values = c("#33CCff","#0000ff")) +
  theme(legend.position = "none")
figYL32

#I46
ps_I46 <- ps_species %>% 
  filter(Species == "C. innocuum I46") %>%
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No")
  
ps_I46 %>%
  group_by(Group) %>%
  shapiro_test(Abundance) #not normal

wilcox.test(Abundance ~ Group, data = ps_I46) #p=0.62

figI46 <- ggplot(ps_I46, aes(x= Group, y = Abundance, color = Group, fill = Group)) + 
  theme_bw() +
  labs(title = "I46")+
  geom_boxplot(color = "black", alpha = 0.5, outlier.shape = NA) +
  geom_jitter(aes(color = Group), position = position_jitter(0.2),  size = 1.3) +
  labs(x = "Colonization", y = "Relative Abundance")+
  scale_color_manual(name = "Colonization", values = c("black","black"))+ #dot color
  scale_fill_manual(values = c("#33CCff","#0000ff")) +
  theme(legend.position = "none")
figI46

#KB1
ps_KB1 <- ps_species %>% 
  filter(Species == "E. faecalis KB1") %>%
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No") %>%
  filter(SampleCode != "M3")

ps_KB1 %>%
  group_by(Group) %>%
  shapiro_test(Abundance) #not normal

wilcox.test(Abundance ~ Group, data = ps_KB1) #p=0.00475

figKB1 <- ggplot(ps_KB1, aes(x= Group, y = Abundance, color = Group, fill = Group)) + 
  theme_bw() +
  labs(title = "KB1")+
  #coord_flip() +
  geom_boxplot(color = "black", alpha = 0.5, outlier.shape = NA) +
  geom_jitter(aes(color = Group), position = position_jitter(0.2),  size = 2.5) +
  labs(x = "Colonization", y = "Relative Abundance")+
  scale_color_manual(name = "Colonization", values = c("black","black"))+ #dot color
  scale_fill_manual(values = c("#33CCff","#0000ff")) +
  theme(legend.position = "none")
figKB1

#YL31
ps_YL31 <- ps_species %>% 
  filter(Species == "F. plautii YL31") %>%
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No")
  
ps_YL31 %>%
  group_by(Group) %>%
  shapiro_test(Abundance) #not normal

wilcox.test(Abundance ~ Group, data = ps_YL31) #p=1

figYL31 <- ggplot(ps_YL31, aes(x= Group, y = Abundance, color = Group, fill = Group)) + 
  theme_bw() +
  labs(title = "YL31")+
  geom_boxplot(color = "black", alpha = 0.5, outlier.shape = NA) +
  geom_jitter(aes(color = Group), position = position_jitter(0.2),  size = 1.3) +
  labs(x = "Colonization", y = "Relative Abundance")+
  scale_color_manual(name = "Colonization", values = c("black","black"))+ #dot color
  scale_fill_manual(values = c("#33CCff","#0000ff")) 
  # +theme(legend.position = "none")
figYL31

#I49
ps_I49 <- ps_species %>% 
  filter(Species == "L. reuteri I49") %>%
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No")
  
ps_I49 %>%
  group_by(Group) %>%
  shapiro_test(Abundance) #normal

levene_test(Abundance ~ Group, data = ps_I49) #variances are not unequal

t.test(Abundance ~ Group, data = ps_I49, var.equal = TRUE) #p=0.01932

figI49 <- ggplot(ps_I49, aes(x= Group, y = Abundance, color = Group, fill = Group)) + 
  theme_bw() +
  labs(title = "I49")+
  #coord_flip() +
  geom_boxplot(color = "black", alpha = 0.5, outlier.shape = NA) +
  geom_jitter(aes(color = Group), position = position_jitter(0.2),  size = 2.5) +
  labs(x = "Colonization", y = "Relative Abundance")+
  scale_color_manual(name = "Colonization", values = c("black","black"))+ #dot color
  scale_fill_manual(values = c("#33CCff","#0000ff")) + 
  theme(legend.position = "none")
figI49

#YL27
ps_YL27 <- ps_species %>% 
  filter(Species == "M. intestinale YL27") %>%
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No")
  
ps_YL27 %>%
  group_by(Group) %>%
  shapiro_test(Abundance) #NA

t.test(Abundance ~ Group, data = ps_YL27) #NA - Abundance is 0 for all samples 

#YL45
ps_YL45 <- ps_species %>% 
  filter(Species == "T. muris YL45") %>%
  filter(Group == "B" | Group == "B+M") %>%
  filter(Abx == "No")
  
ps_YL45 %>%
  group_by(Group) %>%
  shapiro_test(Abundance) #normal

levene_test(Abundance ~ Group, data = ps_YL45) #variances are not unequal

t.test(Abundance ~ Group, data = ps_YL45, var.equal = TRUE) #p=0.009094

figYL45 <- ggplot(ps_YL45, aes(x= Group, y = Abundance, color = Group, fill = Group)) + 
  theme_bw() +
  labs(title = "YL45")+
  #coord_flip() +
  geom_boxplot(color = "black", alpha = 0.5, outlier.shape = NA) +
  geom_jitter(aes(color = Group), position = position_jitter(0.2),  size = 2.5) +
  labs(x = "Colonization", y = "Relative Abundance")+
 scale_color_manual(name = "Colonization", values = c("black","black"))+ #dot color
  scale_fill_manual(values = c("#33CCff","#0000ff")) +
  theme(legend.position = "none")
figYL45

#plotting graphs of interest together
library(gridExtra)

grid.arrange(nrow = 2,  figKB1, figYL45, figYL58, figI49)

## BiCOR - correlation analysis

#Uses package 'microbiome'
library(BiocManager)
#source("https://bioconductor.org/install")
#useDevel()
BiocManager::install(version='devel')
BiocManager::install("microbiome")

#check directory to file folder
getwd()

#choose file containing relative abundance and immune information for each animal
immune_16s <- read.csv(file.choose(), header=TRUE, row.names=1)

#create different objects, one for each range of columns to correlate
abund.16S<- immune_16s[,4:15] #range relative abundance OligoMM12 melted
immune.cLP<- immune_16s[,71:135] #range of immune features cLP
immune.mLN<-immune_16s[,23:70] #range of immune features mLN
immune.MSD<-immune_16s[,17:22] #range of serum. antibodies
immune<-immune_16s[,17:135] #range all immune features

#Whole immune dataset
#Run correlations using Spearman method and correcting with FDR, if none exist, command will say so.
test <- associate(abund.16S, immune, method = "spearman", mode = "matrix", n.signif = 1, p.adj.threshold = 0.05, p.adj.method = "fdr")

#create table with correlation coeficients and p values, this can be saved as a cvs table if wanted.
corr.immune.16s.table <- associate(abund.16S, immune, method = "spearman", mode = "table", n.signif = 1, p.adj.threshold = 0.05, p.adj.method = "fdr")
head(corr.immune.16s.table)

#create heatmap from correlation table
p <- heat(corr.immune.16s.table, "X1", "X2", fill = "Correlation", star = "p.adj", p.adj.threshold = 0.05, filter.significant=FALSE, star.size = 6)
print(p)

# per specific immune site
#Run correlations using Spearman method and correcting with FDR, if none exist, command will say so.
test <- associate(abund.16S, immune.mLN, #change for object of interest
        method = "spearman", mode = "matrix", n.signif = 1, p.adj.threshold = 0.05, p.adj.method = "fdr")

#create table with correlation coeficients and p values, this can be saved as a cvs table if wanted.
corr.mLN.16s.table <- associate(abund.16S, immune.mLN, method = "spearman", mode = "table", n.signif = 1, p.adj.threshold = 0.05, p.adj.method = "fdr")
head(corr.immune.16s.table)

#create heatmap from correlation table
p <- heat(corr.mLN.16s.table, "X1", "X2", fill = "Correlation", star = "p.adj", p.adj.threshold = 0.05, filter.significant=FALSE, star.size = 12)
print(p)









